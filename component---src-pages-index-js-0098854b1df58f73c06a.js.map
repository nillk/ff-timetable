{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["Title","Typography","Paragraph","ffInfo","data","allSchedule","group","reduce","acc","curr","name","fieldValue","firstSlugOfYear","nodes","year","fields","slug","years","type","map","ff","Object","keys","key","to","toUpperCase","query"],"mappings":"8oBAMQA,EAAqBC,IAArBD,MAAOE,EAAcD,IAAdC,UAEA,sBAAe,IACtBC,EADqB,EAAXC,KACIC,YAAYC,MAAMC,QAAO,SAACC,EAAKC,GACjD,IAAMC,EAAOD,EAAKE,WACZC,EAAkBH,EAAKI,MAAMN,QAAO,SAACC,EAAKC,GAI9C,OAHMA,EAAKK,QAAQN,IACjBA,EAAIC,EAAKK,MAAQL,EAAKM,OAAOC,MAExBR,IACN,IAEH,MAAM,GAAN,SAAWA,GAAX,CAAgB,CAACE,OAAMO,MAAOL,OAC7B,IAEH,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAACZ,EAAD,KACE,kBAAC,IAAD,CAAMkB,KAAK,iBADb,4BAGA,kBAAChB,EAAD,KACE,4BACGC,EAAOgB,KAAI,SAAAC,GACV,OAAOC,OAAOC,KAAKF,EAAGH,OAAOE,KAAI,SAAAL,GAAI,OACnC,wBAAIS,IAAG,IAAMH,EAAGV,KAAT,IAAiBI,GACtB,kBAAC,IAAD,CAAMU,GAAIJ,EAAGH,MAAMH,IAChBM,EAAGV,KAAKe,cADX,IAC2BX,eAYtC,IAAMY,EAAK","file":"component---src-pages-index-js-0098854b1df58f73c06a.js","sourcesContent":["import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport { Typography, Icon } from \"antd\";\n\nimport Page from \"../components/layout\";\n\nconst { Title, Paragraph } = Typography;\n\nexport default ({ data }) => {\n  const ffInfo = data.allSchedule.group.reduce((acc, curr) => {\n    const name = curr.fieldValue;\n    const firstSlugOfYear = curr.nodes.reduce((acc, curr) => {\n      if (!(curr.year in acc)) {\n        acc[curr.year] = curr.fields.slug;\n      }\n      return acc;\n    }, {});\n\n    return [...acc, {name, years: firstSlugOfYear }];\n  }, []);\n\n  return (\n    <Page>\n      <Typography>\n        <Title>\n          <Icon type=\"video-camera\" /> Film Festival Timetable\n          </Title>\n        <Paragraph>\n          <ul>\n            {ffInfo.map(ff => {\n              return Object.keys(ff.years).map(year => (\n                <li key={`/${ff.name}/${year}`}>\n                  <Link to={ff.years[year]}>\n                    {ff.name.toUpperCase()} {year}\n                  </Link>\n                </li>\n              ))\n            })}\n          </ul>\n        </Paragraph>\n      </Typography>\n    </Page>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allSchedule(sort: {fields: date}) {\n      group(field: name) {\n        fieldValue\n        nodes {\n          year\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}